import { Node, NodeDef, NodeInitializer } from "node-red";
import { <%NodeTypePascalCase%>Options } from "./options";

interface <%NodeTypePascalCase%>NodeDef extends NodeDef, <%NodeTypePascalCase%>Options {}

interface <%NodeTypePascalCase%>Node extends Node {}

const nodeInit: NodeInitializer = (RED): void => {
  function <%NodeTypePascalCase%>NodeConstructor(
    this: <%NodeTypePascalCase%>Node,
    config: <%NodeTypePascalCase%>NodeDef
  ): void {
    RED.nodes.createNode(this, config);

    this.on("input", (msg, send, done) => {
      send(msg);
      done();
    });
  }

  RED.nodes.registerType("<%NodeTypeKebabCase%>", <%NodeTypePascalCase%>NodeConstructor);
};

export = nodeInit;
